# nginx.conf.template

# Define roles based on $ACTIVE_POOL (set in entrypoint script)
# $BLUE_ROLE will be "" and $GREEN_ROLE will be "backup" if ACTIVE_POOL=blue
# $BLUE_ROLE will be "backup" and $GREEN_ROLE will be "" if ACTIVE_POOL=green

upstream backend {
    # The '$' variables are substituted by the entrypoint script
    server app_blue:${APP_PORT}  $BLUE_ROLE max_fails=2 fail_timeout=10s;
    server app_green:${APP_PORT} $GREEN_ROLE max_fails=2 fail_timeout=10s;
}

server {
    listen 80;

    location / {
        # --- Standard Proxy Headers ---
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # --- Timeouts ---
        # Tight timeouts for fast failure detection
        proxy_connect_timeout 2s;
        proxy_send_timeout    2s;
        proxy_read_timeout    2s;

        # --- Failover & Retry Logic ---
        # If a request fails, try the next server in the upstream
        # This handles the "zero failed client requests" requirement.
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2; # Try primary, then backup
        
        # Pass requests to the upstream
        proxy_pass http://backend;

        # --- Header Forwarding ---
        # Ensures response headers (X-App-Pool, X-Release-Id)
        # are passed from the app to the client.
        # This is default behavior, but we're explicit.
        proxy_pass_request_headers  on;
    }
}
